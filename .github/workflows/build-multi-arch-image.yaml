name: Build Multi Arch Image
on:
  push:
    branches:
      - ecx-*
    tags:
      - ecx-*
    paths-ignore:
      - "docs/**"
      - "**.md"
env:
  GO_VERSION: "1.19"
  GOSEC_VERSION: "2.13.1"
  DOCKER_REPO: etcdnecx

jobs:
  go-sec:
    name: gosec
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: actions/setup-go@v3
        with:
          go-version: "${{ env.GO_VERSION }}"
          check-latest: true
        id: go

      - name: Export Go full version
        run: |
          echo "GO_FULL_VER=$(go version | awk '{print $3}')" >> "$GITHUB_ENV"

      - name: make lint
        run: |
          go install github.com/securego/gosec/cmd/gosec@latest
          make lint

  build-x86:
    name: Build x86
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: actions/setup-go@v3
        with:
          go-version: "${{ env.GO_VERSION }}"
          check-latest: true
        id: go

      - name: Export Go full version
        run: |
          echo "GO_FULL_VER=$(go version | awk '{print $3}')" >> "$GITHUB_ENV"

      - name: Unit test
        run: |
          go install github.com/onsi/ginkgo/ginkgo@latest
          make ut

      - name: Build
        run: |
          go mod tidy
          go install github.com/securego/gosec/cmd/gosec@latest
          TAG=release-x86 make release

      - name: Login to docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME  }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push
        env:
          TAG: ${{ github.ref_name }}
        run: |
          TAG=$(echo ${TAG} | sed 's/ecx-//g')

          docker tag kube-ovn/kube-ovn:release-x86 $DOCKER_REPO/kube-ovn:$TAG-x86
          docker push $DOCKER_REPO/kube-ovn:$TAG-x86

  build-arm:
    name: Build arm64
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - uses: actions/setup-go@v3
        with:
          go-version: "${{ env.GO_VERSION }}"
          check-latest: true
        id: go

      - name: Export Go full version
        run: |
          echo "GO_FULL_VER=$(go version | awk '{print $3}')" >> "$GITHUB_ENV"

      - name: Build
        run: |
          go mod tidy
          go install github.com/securego/gosec/cmd/gosec@latest
          TAG=release-arm make release-arm

      - name: Login to docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME  }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push
        env:
          TAG: ${{ github.ref_name }}
        run: |
          TAG=$(echo ${TAG} | sed 's/ecx-//g')

          docker tag kube-ovn/kube-ovn:release-arm $DOCKER_REPO/kube-ovn:$TAG-arm
          docker push $DOCKER_REPO/kube-ovn:$TAG-arm

  push-docker-hub:
    needs: [ build-x86, build-arm ]
    name: Push multi arch images to docker hub
    runs-on: ubuntu-22.04
    steps:
      - name: Login to docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME  }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
          TAG: ${{ github.ref_name }}
          REF: ${{ github.ref }}
          DEV_REGISTRY: ${{ vars.DEV_REGISTRY }}
          TAG_REGISTRY: ${{ vars.PRO_REGISTRY }}
        run: |
          TAG=$(echo ${TAG} | sed 's/ecx-//g')
          
          # push to docker hub 
          docker pull $DOCKER_REPO/kube-ovn:$TAG-x86
          docker pull $DOCKER_REPO/kube-ovn:$TAG-arm
          docker manifest rm $DOCKER_REPO/kube-ovn:$TAG || true
          docker manifest create $DOCKER_REPO/kube-ovn:$TAG $DOCKER_REPO/kube-ovn:$TAG-x86 $DOCKER_REPO/kube-ovn:$TAG-arm
          docker manifest push $DOCKER_REPO/kube-ovn:$TAG
          docker manifest rm $DEV_REGISTRY/ecf-edge/kube-ovn:$TAG || true
  push-self-hub:
    needs: [ push-docker-hub ]
    name: Push multi arch images to self hub
    runs-on: [ self-hosted, linux ]
    steps:
      - name: Login to DEV Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DEV_REGISTRY }}
          username: ${{ secrets.DEV_HARBOR_USERNAME }}
          password: ${{ secrets.DEV_HARBOR_TOKEN }}

      - name: Login to TAG Hub
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.PRO_REGISTRY }}
          username: ${{ secrets.PRO_HARBOR_USERNAME }}
          password: ${{ secrets.PRO_HARBOR_TOKEN }}

      - name: Push
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
          TAG: ${{ github.ref_name }}
          REF: ${{ github.ref }}
          DEV_REGISTRY: ${{ vars.DEV_REGISTRY }}
          TAG_REGISTRY: ${{ vars.PRO_REGISTRY }}
        run: |
          TAG=$(echo ${TAG} | sed 's/ecx-//g')
          
          docker pull $DOCKER_REPO/kube-ovn:$TAG-x86
          docker pull $DOCKER_REPO/kube-ovn:$TAG-arm
          
          # push to dev hub 
          docker tag $DOCKER_REPO/kube-ovn:$TAG-x86 $DEV_REGISTRY/ecf-edge/kube-ovn:$TAG-x86
          docker tag $DOCKER_REPO/kube-ovn:$TAG-arm $DEV_REGISTRY/ecf-edge/kube-ovn:$TAG-arm
          
          docker manifest rm $DEV_REGISTRY/ecf-edge/kube-ovn:$TAG || true
          docker manifest create $DEV_REGISTRY/ecf-edge/kube-ovn:$TAG $DEV_REGISTRY/ecf-edge/kube-ovn:$TAG-x86 $DEV_REGISTRY/ecf-edge/kube-ovn:$TAG-arm
          docker manifest push $DEV_REGISTRY/ecf-edge/kube-ovn:$TAG
          docker manifest rm $DEV_REGISTRY/ecf-edge/ecf-edge/kube-ovn:$TAG || true
          
          # push to tag hub 
          if echo "$REF" | grep -q "refs/tag"; then
            docker tag $DOCKER_REPO/kube-ovn:$TAG-x86 $TAG_REGISTRY/ecf-edge/kube-ovn:$TAG-x86
            docker tag $DOCKER_REPO/kube-ovn:$TAG-arm $TAG_REGISTRY/ecf-edge/kube-ovn:$TAG-arm
          
            docker manifest rm $TAG_REGISTRY/ecf-edge/kube-ovn:$TAG || true
            docker manifest create $TAG_REGISTRY/ecf-edge/kube-ovn:$TAG $TAG_REGISTRY/ecf-edge/kube-ovn:$TAG-x86 $TAG_REGISTRY/ecf-edge/kube-ovn:$TAG-arm
            docker manifest push $TAG_REGISTRY/ecf-edge/kube-ovn:$TAG
            docker manifest rm $TAG_REGISTRY/ecf-edge/ecf-edge/kube-ovn:$TAG || true
          fi